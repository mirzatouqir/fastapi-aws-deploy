name: CI/CD to AWS ECR + App Runner

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push Docker image
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          ECR_URI=$ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY

          aws ecr describe-repositories --repository-names $ECR_REPOSITORY || \
          aws ecr create-repository --repository-name $ECR_REPOSITORY

          docker build -t $ECR_REPOSITORY .
          docker tag $ECR_REPOSITORY:latest $ECR_URI:latest
          docker push $ECR_URI:latest

      - name: Deploy to App Runner
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          ECR_URI=$ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY
          SERVICE_NAME=fastapi-apprunner-demo

          SERVICE_ARN=$(aws apprunner list-services --query "ServiceSummaryList[?ServiceName=='$SERVICE_NAME'].ServiceArn" --output text)

          if [ -z "$SERVICE_ARN" ]; then
            echo "Creating new App Runner service..."
            aws apprunner create-service \
              --service-name $SERVICE_NAME \
              --source-configuration ImageRepository="{
                imageIdentifier=\"$ECR_URI:latest\",
                imageRepositoryType=\"ECR\",
                imageConfiguration={port=\"80\"}
              }"
          else
            echo "Updating existing App Runner service..."
            aws apprunner update-service \
              --service-arn $SERVICE_ARN \
              --source-configuration ImageRepository="{
                imageIdentifier=\"$ECR_URI:latest\",
                imageRepositoryType=\"ECR\",
                imageConfiguration={port=\"80\"}
              }"
          fi
